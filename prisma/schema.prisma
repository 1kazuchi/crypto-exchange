// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  username  String        @unique
  email     String        @unique
  password  String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  wallets   Wallet[]      
  transactions Transaction[] 
}

model Wallet {
  id          Int             @id @default(autoincrement())
  userId      Int
  user        User            @relation(fields: [userId], references: [id])
  balance     Float           @default(0)
  transactions Transaction[]  
  walletCryptos WalletCryptocurrency[] 
}

model Cryptocurrency {
  id        Int             @id @default(autoincrement())
  name      String
  symbol    String          @unique
  price     Float
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  transactions Transaction[] 

  WalletCryptocurrency WalletCryptocurrency[]
}

model Transaction {
  id              Int            @id @default(autoincrement())
  amount          Float
  transactionType String         
  walletId        Int
  price           Float
  wallet          Wallet         @relation(fields: [walletId], references: [id])
  cryptoId        Int
  cryptocurrency  Cryptocurrency @relation(fields: [cryptoId], references: [id])
  createdAt       DateTime       @default(now())
  userId          Int
  user            User           @relation(fields: [userId], references: [id])
  currency        String         
  description     String? 
}

model WalletCryptocurrency {
  walletId        Int
  cryptocurrencyId Int
  amount          Float
  wallet          Wallet        @relation(fields: [walletId], references: [id])
  cryptocurrency   Cryptocurrency @relation(fields: [cryptocurrencyId], references: [id])

  @@id([walletId, cryptocurrencyId]) 
}
